{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/components/Timer.svelte",
    "../src/components/Game.svelte",
    "../src/components/Thing.svelte"
  ],
  "sourcesContent": [
    "<style>\n    :global(body) {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 8px;\n        box-sizing: border-box;\n    }\n\n    button, div {\n        margin: 8px 0 0;\n    }\n\n    div {\n        user-select: none;\n    }\n</style>\n\n<script>\n    import Game from './components/Game.svelte';\n    import Timer from './components/Timer.svelte'\n    import { gameInProgress, score } from './stores';\n\n    let time;\n    let timeComplete = false;\n    const startClicked = () => gameInProgress.set(true);\n    $: if (time === 0) {\n        timeComplete = true;\n    }\n</script>\n\n<Game />\n\n{#if $gameInProgress}\n    <Timer bind:time={time} />\n    <div>Click for your life!!</div>\n{:else if !timeComplete}\n    <button on:click|once={startClicked}>Start</button>\n{/if}\n\n<div>{timeComplete ? 'Final ' : ''}Score: {$score}</div>\n",
    "<style>\n    p {\n        margin: 8px 0;\n        user-select: none;\n    }\n</style>\n\n<script>\n    import { onMount } from 'svelte';\n    import { gameInProgress, timer } from '../stores';\n\n    export let time = 0;\n\n    onMount(() => {\n        const unsubscribe = timer.subscribe(value => {\n            time = value;\n            if (time === 0) {\n                gameInProgress.set(false);\n                unsubscribe();\n            }\n        });\n    });\n</script>\n\n{#if time > 0}\n    <p>Time left: {time}</p>\n{:else}\n    <p>Time's up!!</p>\n{/if}\n",
    "<style>\n    div {\n        width: 300px;\n        height: 300px;\n        background-color: black;\n    }\n</style>\n\n<script>\n    import { onMount } from 'svelte';\n    import { gameInProgress, score } from '../stores';\n    import Thing from './Thing.svelte';\n\n    let things = [];\n    const colours = [\n        '#ff0080',\n        '#0092ff',\n        '#ffdf00'\n    ];\n    const m = { x: 0, y: 0, xSpeed: 0, ySpeed: 0 };\n\n    const onMainClicked = e => {\n        if ($gameInProgress) {\n            m.x = e.clientX - 8;\n            m.y = e.clientY - 8;\n            m.xSpeed = Math.random() * 8 - 4;\n            m.ySpeed = Math.random() * 8 - 4;\n            m.rotation = 0;\n            m.rotationSpeed = Math.random() * 8 - 4;\n            if (m.xSpeed <= 0 && m.xSpeed > -1) m.xSpeed = -1;\n            if (m.xSpeed >= 0 && m.xSpeed < 1) m.xSpeed = 1;\n            if (m.ySpeed <= 0 && m.ySpeed > -1) m.ySpeed = -1;\n            if (m.ySpeed >= 0 && m.ySpeed < 1) m.ySpeed = 1;\n            m.colour = colours[Math.floor(Math.random() * 3)];\n\n            things = [...things, {...m}];\n            score.update(s => s += 1);\n        }\n    };\n\n    onMount(() => {\n        let frame;\n        (function loop() {\n            frame = requestAnimationFrame(loop);\n            things = things.map(thing => {\n                thing.x += thing.xSpeed;\n                thing.y += thing.ySpeed;\n                thing.rotation += thing.rotationSpeed;\n\n                if (thing.x <= 8 || thing.x >= 298) {\n                    thing.xSpeed = -1 * thing.xSpeed;\n                }\n\n                if (thing.y <= 8 || thing.y >= 298) {\n                    thing.ySpeed = -1 * thing.ySpeed;\n                }\n\n                return thing;\n            });\n        }());\n\n        return () => {\n            cancelAnimationFrame(frame);\n        };\n    });\n</script>\n\n<div on:click={onMainClicked}>\n    {#each things as thing, i}\n        <Thing thing={thing} />\n    {/each}\n</div>\n",
    "<style>\n    div {\n        position: absolute;\n    }\n</style>\n\n<script>\n    export let thing;\n    let width = Math.ceil(Math.random() * 15) + 5;\n    let height = Math.ceil(Math.random() * 15) + 5;\n</script>\n\n<div style=\"width: {width}px;\n            height: {height}px;\n            top: {thing.y}px;\n            left: {thing.x}px;\n            background-color: {thing.colour};\n            transform: rotate({thing.rotation}deg);\">\n\n</div>\n"
  ],
  "names": [],
  "mappings": "AACY,IAAI,AAAE,CAAC,AACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,UAAU,AAC1B,CAAC,AAED,oBAAM,CAAE,GAAG,cAAC,CAAC,AACT,MAAM,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC,AACnB,CAAC,AAED,GAAG,cAAC,CAAC,AACD,WAAW,CAAE,IAAI,AACrB,CAAC;ACdD,CAAC,cAAC,CAAC,AACC,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,WAAW,CAAE,IAAI,AACrB,CAAC;ACHD,GAAG,eAAC,CAAC,AACD,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,gBAAgB,CAAE,KAAK,AAC3B,CAAC;ACJD,GAAG,eAAC,CAAC,AACD,QAAQ,CAAE,QAAQ,AACtB,CAAC"
}